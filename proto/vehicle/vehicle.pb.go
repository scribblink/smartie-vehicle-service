// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vehicle/vehicle.proto

package vehicle

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Vehicle struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity             int32    `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	MaxWeight            int32    `protobuf:"varint,3,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Available            bool     `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	OwnerId              string   `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vehicle) Reset()         { *m = Vehicle{} }
func (m *Vehicle) String() string { return proto.CompactTextString(m) }
func (*Vehicle) ProtoMessage()    {}
func (*Vehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d8799997b57e53, []int{0}
}

func (m *Vehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vehicle.Unmarshal(m, b)
}
func (m *Vehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vehicle.Marshal(b, m, deterministic)
}
func (m *Vehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vehicle.Merge(m, src)
}
func (m *Vehicle) XXX_Size() int {
	return xxx_messageInfo_Vehicle.Size(m)
}
func (m *Vehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_Vehicle.DiscardUnknown(m)
}

var xxx_messageInfo_Vehicle proto.InternalMessageInfo

func (m *Vehicle) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vehicle) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Vehicle) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

func (m *Vehicle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Vehicle) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Vehicle) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type Specification struct {
	Capacity             int32    `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	MaxWeight            int32    `protobuf:"varint,2,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Specification) Reset()         { *m = Specification{} }
func (m *Specification) String() string { return proto.CompactTextString(m) }
func (*Specification) ProtoMessage()    {}
func (*Specification) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d8799997b57e53, []int{1}
}

func (m *Specification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specification.Unmarshal(m, b)
}
func (m *Specification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specification.Marshal(b, m, deterministic)
}
func (m *Specification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specification.Merge(m, src)
}
func (m *Specification) XXX_Size() int {
	return xxx_messageInfo_Specification.Size(m)
}
func (m *Specification) XXX_DiscardUnknown() {
	xxx_messageInfo_Specification.DiscardUnknown(m)
}

var xxx_messageInfo_Specification proto.InternalMessageInfo

func (m *Specification) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Specification) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

type Response struct {
	Vehicle              *Vehicle   `protobuf:"bytes,1,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	Vehicles             []*Vehicle `protobuf:"bytes,2,rep,name=vehicles,proto3" json:"vehicles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_67d8799997b57e53, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetVehicle() *Vehicle {
	if m != nil {
		return m.Vehicle
	}
	return nil
}

func (m *Response) GetVehicles() []*Vehicle {
	if m != nil {
		return m.Vehicles
	}
	return nil
}

func init() {
	proto.RegisterType((*Vehicle)(nil), "vehicle.Vehicle")
	proto.RegisterType((*Specification)(nil), "vehicle.Specification")
	proto.RegisterType((*Response)(nil), "vehicle.Response")
}

func init() { proto.RegisterFile("proto/vehicle/vehicle.proto", fileDescriptor_67d8799997b57e53) }

var fileDescriptor_67d8799997b57e53 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0xfd, 0x6d, 0xfa, 0x2f, 0x99, 0x1f, 0x2d, 0x3a, 0x07, 0x59, 0xab, 0x42, 0xc8, 0x29, 0x88,
	0xb4, 0x50, 0xaf, 0x5e, 0x44, 0x10, 0xf4, 0x98, 0x82, 0x1e, 0xcb, 0x76, 0x77, 0xb4, 0x03, 0xf9,
	0x47, 0x12, 0xd2, 0x7a, 0xf2, 0xb3, 0xf8, 0x4d, 0x85, 0x35, 0x89, 0x54, 0x8b, 0xa7, 0x9d, 0x79,
	0xfb, 0xde, 0xec, 0x9b, 0xb7, 0x70, 0x96, 0x17, 0x59, 0x95, 0xcd, 0x6b, 0xda, 0xb0, 0x8e, 0xa9,
	0x3d, 0x67, 0x16, 0xc5, 0x51, 0xd3, 0x06, 0x1f, 0x02, 0x46, 0x4f, 0x5f, 0x35, 0x4e, 0xc0, 0x61,
	0x23, 0x85, 0x2f, 0x42, 0x2f, 0x72, 0xd8, 0xe0, 0x14, 0x5c, 0xad, 0x72, 0xa5, 0xb9, 0x7a, 0x93,
	0x8e, 0x2f, 0xc2, 0x41, 0xd4, 0xf5, 0x78, 0x01, 0x90, 0xa8, 0xdd, 0x6a, 0x4b, 0xfc, 0xba, 0xa9,
	0x64, 0xcf, 0xde, 0x7a, 0x89, 0xda, 0x3d, 0x5b, 0x00, 0x11, 0xfa, 0xa9, 0x4a, 0x48, 0xf6, 0xed,
	0x30, 0x5b, 0xe3, 0x39, 0x78, 0xaa, 0x56, 0x1c, 0xab, 0x75, 0x4c, 0x72, 0xe0, 0x8b, 0xd0, 0x8d,
	0xbe, 0x01, 0x3c, 0x05, 0x37, 0xdb, 0xa6, 0x54, 0xac, 0xd8, 0xc8, 0xa1, 0x55, 0x8d, 0x6c, 0xff,
	0x60, 0x82, 0x47, 0x18, 0x2f, 0x73, 0xd2, 0xfc, 0xc2, 0x5a, 0x55, 0x9c, 0xa5, 0x7b, 0xc6, 0xc4,
	0x9f, 0xc6, 0x9c, 0x1f, 0xc6, 0x02, 0x03, 0x6e, 0x44, 0x65, 0x9e, 0xa5, 0x25, 0xe1, 0x25, 0xb4,
	0x31, 0xd8, 0x29, 0xff, 0x17, 0x47, 0xb3, 0x36, 0xa5, 0x26, 0x92, 0xa8, 0x25, 0xe0, 0x15, 0xb8,
	0x4d, 0x59, 0x4a, 0xc7, 0xef, 0x1d, 0x24, 0x77, 0x8c, 0xc5, 0x3b, 0x4c, 0x1a, 0x70, 0x49, 0x45,
	0xcd, 0x9a, 0xf0, 0x06, 0xc6, 0xf7, 0x9c, 0x9a, 0xdb, 0x6e, 0xdf, 0x93, 0x4e, 0xbe, 0xb7, 0xdb,
	0xf4, 0xb8, 0xc3, 0x5b, 0x9f, 0xc1, 0x3f, 0x9c, 0xc3, 0xf0, 0xae, 0x20, 0x55, 0x11, 0xfe, 0x7a,
	0xf5, 0xa0, 0x60, 0x3d, 0xb4, 0xdf, 0x7c, 0xfd, 0x19, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xc3, 0x65,
	0xfe, 0x05, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for VehicleService service

type VehicleServiceClient interface {
	FindAvailable(ctx context.Context, in *Specification, opts ...client.CallOption) (*Response, error)
	Create(ctx context.Context, in *Vehicle, opts ...client.CallOption) (*Response, error)
}

type vehicleServiceClient struct {
	c           client.Client
	serviceName string
}

func NewVehicleServiceClient(serviceName string, c client.Client) VehicleServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "vehicle"
	}
	return &vehicleServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *vehicleServiceClient) FindAvailable(ctx context.Context, in *Specification, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "VehicleService.FindAvailable", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vehicleServiceClient) Create(ctx context.Context, in *Vehicle, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "VehicleService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VehicleService service

type VehicleServiceHandler interface {
	FindAvailable(context.Context, *Specification, *Response) error
	Create(context.Context, *Vehicle, *Response) error
}

func RegisterVehicleServiceHandler(s server.Server, hdlr VehicleServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&VehicleService{hdlr}, opts...))
}

type VehicleService struct {
	VehicleServiceHandler
}

func (h *VehicleService) FindAvailable(ctx context.Context, in *Specification, out *Response) error {
	return h.VehicleServiceHandler.FindAvailable(ctx, in, out)
}

func (h *VehicleService) Create(ctx context.Context, in *Vehicle, out *Response) error {
	return h.VehicleServiceHandler.Create(ctx, in, out)
}
